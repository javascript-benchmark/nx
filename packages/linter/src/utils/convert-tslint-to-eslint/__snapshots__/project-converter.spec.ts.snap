// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectConverter ignoreExistingTslintConfig ignoreExistingTslintConfig: false should use existing TSLint configs and merge their converted ESLint equivalents with recommended ESLint configs 1`] = `
{
  "overrides": [
    {
      "files": [
        "*.ts",
      ],
      "rules": {
        "some-converted-rule": "error",
      },
    },
  ],
  "rules": {
    "some-recommended-root-eslint-rule": "error",
  },
}
`;

exports[`ProjectConverter ignoreExistingTslintConfig ignoreExistingTslintConfig: false should use existing TSLint configs and merge their converted ESLint equivalents with recommended ESLint configs 2`] = `
{
  "rules": {
    "some-converted-rule": "error",
    "some-recommended-project-eslint-rule": "error",
  },
}
`;

exports[`ProjectConverter ignoreExistingTslintConfig ignoreExistingTslintConfig: true should ignore existing TSLint configs and just reset the project to use recommended ESLint configs 1`] = `
{
  "rules": {
    "some-recommended-root-eslint-rule": "error",
  },
}
`;

exports[`ProjectConverter ignoreExistingTslintConfig ignoreExistingTslintConfig: true should ignore existing TSLint configs and just reset the project to use recommended ESLint configs 2`] = `
{
  "rules": {
    "some-recommended-project-eslint-rule": "error",
  },
}
`;

exports[`ProjectConverter removeTSLintFromWorkspace() should remove all relevant traces of TSLint from the workspace 1`] = `
{
  "dependencies": {},
  "devDependencies": {
    "codelyzer": "latest",
    "tslint": "latest",
  },
  "name": "test-name",
}
`;

exports[`ProjectConverter removeTSLintFromWorkspace() should remove all relevant traces of TSLint from the workspace 2`] = `
{
  "affected": {
    "defaultBase": "main",
  },
  "generators": {
    "@nx/angular": {
      "application": {
        "linter": "tslint",
      },
      "library": {
        "linter": "tslint",
      },
    },
  },
  "npmScope": "proj",
  "tasksRunnerOptions": {
    "default": {
      "options": {
        "cacheableOperations": [
          "build",
          "lint",
          "test",
          "e2e",
        ],
      },
      "runner": "nx/tasks-runners/default",
    },
  },
}
`;

exports[`ProjectConverter removeTSLintFromWorkspace() should remove all relevant traces of TSLint from the workspace 3`] = `
{
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "generators": {
    "@nx/angular:application": {
      "e2eTestRunner": "cypress",
      "linter": "eslint",
      "unitTestRunner": "jest",
    },
    "@nx/angular:library": {
      "linter": "tslint",
    },
  },
  "name": "foo",
  "projectType": "application",
  "root": "apps/foo",
  "targets": {
    "lint": {
      "executor": "@angular-devkit/build-angular:tslint",
      "options": {
        "exclude": [
          "**/node_modules/**",
          "!apps/foo/**/*",
        ],
        "tsConfig": [
          "apps/foo/tsconfig.app.json",
        ],
      },
    },
  },
}
`;

exports[`ProjectConverter removeTSLintFromWorkspace() should remove all relevant traces of TSLint from the workspace 4`] = `
{
  "dependencies": {},
  "devDependencies": {},
  "name": "test-name",
}
`;

exports[`ProjectConverter removeTSLintFromWorkspace() should remove all relevant traces of TSLint from the workspace 5`] = `
{
  "affected": {
    "defaultBase": "main",
  },
  "npmScope": "proj",
  "tasksRunnerOptions": {
    "default": {
      "options": {
        "cacheableOperations": [
          "build",
          "lint",
          "test",
          "e2e",
        ],
      },
      "runner": "nx/tasks-runners/default",
    },
  },
}
`;

exports[`ProjectConverter removeTSLintFromWorkspace() should remove all relevant traces of TSLint from the workspace 6`] = `
{
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "generators": {
    "@nx/angular:application": {
      "e2eTestRunner": "cypress",
      "unitTestRunner": "jest",
    },
  },
  "name": "foo",
  "projectType": "application",
  "root": "apps/foo",
  "targets": {
    "lint": {
      "executor": "@angular-devkit/build-angular:tslint",
      "options": {
        "exclude": [
          "**/node_modules/**",
          "!apps/foo/**/*",
        ],
        "tsConfig": [
          "apps/foo/tsconfig.app.json",
        ],
      },
    },
  },
}
`;

exports[`ProjectConverter removeTSLintFromWorkspace() should remove the entry in generators for convert-tslint-to-eslint because it is no longer needed 1`] = `
{
  "affected": {
    "defaultBase": "main",
  },
  "generators": {
    "@nx/angular": {
      "convert-tslint-to-eslint": {
        "removeTSLintIfNoMoreTSLintTargets": true,
      },
    },
  },
  "npmScope": "proj",
  "tasksRunnerOptions": {
    "default": {
      "options": {
        "cacheableOperations": [
          "build",
          "lint",
          "test",
          "e2e",
        ],
      },
      "runner": "nx/tasks-runners/default",
    },
  },
}
`;

exports[`ProjectConverter removeTSLintFromWorkspace() should remove the entry in generators for convert-tslint-to-eslint because it is no longer needed 2`] = `
{
  "affected": {
    "defaultBase": "main",
  },
  "npmScope": "proj",
  "tasksRunnerOptions": {
    "default": {
      "options": {
        "cacheableOperations": [
          "build",
          "lint",
          "test",
          "e2e",
        ],
      },
      "runner": "nx/tasks-runners/default",
    },
  },
}
`;

exports[`ProjectConverter setDefaults() should save in nx.json 1`] = `
{
  "affected": {
    "defaultBase": "main",
  },
  "generators": {
    "@nx/angular": {
      "application": {
        "linter": "tslint",
      },
      "library": {
        "linter": "tslint",
      },
    },
  },
  "npmScope": "proj",
  "tasksRunnerOptions": {
    "default": {
      "options": {
        "cacheableOperations": [
          "build",
          "lint",
          "test",
          "e2e",
        ],
      },
      "runner": "nx/tasks-runners/default",
    },
  },
}
`;

exports[`ProjectConverter setDefaults() should save in nx.json 2`] = `
{
  "affected": {
    "defaultBase": "main",
  },
  "generators": {
    "@nx/angular": {
      "application": {
        "linter": "tslint",
      },
      "convert-tslint-to-eslint": {
        "ignoreExistingTslintConfig": true,
        "removeTSLintIfNoMoreTSLintTargets": true,
      },
      "library": {
        "linter": "tslint",
      },
    },
  },
  "npmScope": "proj",
  "tasksRunnerOptions": {
    "default": {
      "options": {
        "cacheableOperations": [
          "build",
          "lint",
          "test",
          "e2e",
        ],
      },
      "runner": "nx/tasks-runners/default",
    },
  },
}
`;

exports[`ProjectConverter setDefaults() should save in nx.json 3`] = `
{
  "affected": {
    "defaultBase": "main",
  },
  "generators": {
    "@nx/angular": {
      "application": {
        "linter": "tslint",
      },
      "convert-tslint-to-eslint": {
        "ignoreExistingTslintConfig": false,
        "removeTSLintIfNoMoreTSLintTargets": false,
      },
      "library": {
        "linter": "tslint",
      },
    },
  },
  "npmScope": "proj",
  "tasksRunnerOptions": {
    "default": {
      "options": {
        "cacheableOperations": [
          "build",
          "lint",
          "test",
          "e2e",
        ],
      },
      "runner": "nx/tasks-runners/default",
    },
  },
}
`;

exports[`ProjectConverter should throw if --dry-run is set 1`] = `
"NOTE: This generator does not support --dry-run. If you are running this in Nx Console, it should execute fine once you hit the "Run" button.
"
`;

exports[`ProjectConverter should throw if --dryRun is set 1`] = `
"NOTE: This generator does not support --dry-run. If you are running this in Nx Console, it should execute fine once you hit the "Run" button.
"
`;

exports[`ProjectConverter should throw if -d is set 1`] = `
"NOTE: This generator does not support --dry-run. If you are running this in Nx Console, it should execute fine once you hit the "Run" button.
"
`;

exports[`ProjectConverter should throw if no root tslint.json is found 1`] = `"We could not find a tslint.json at the root of your workspace, maybe you have already migrated to ESLint?"`;
